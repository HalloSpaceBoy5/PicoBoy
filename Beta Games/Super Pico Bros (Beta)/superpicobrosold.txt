from PicoGameBoy import PicoGameBoy
from time import sleep, ticks_ms, ticks_diff
from math import sqrt
from machine import freq
from os import rename, remove, listdir
rename("./main.py", "./superpicobros.py")
rename("./title.py", "./main.py")
freq(250000000)

pgb=PicoGameBoy()
pb=bytearray(b'\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\x05\xdf\x05\xdf\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x05\xdf\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\x00\x00\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x00\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x05\xdf\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x05\xdf\x05\xdf\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf')
pgb.add_sprite(pb,24,24)
del pb
pbl=bytearray(b'\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x05\xdf\x05\xdf\x00\x00\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x05\xdf\x00\x00\xd9$\xd9$\xd9$\x00\x00\x00\x006%6%6%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd9$\xd9$\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\x00\x00\x00\x006%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd9$\xd9$\x00\x00\x00\x00\xd9$\xd9$\xd9$\x00\x00\x00\x006%6%6%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x05\xdf\x00\x00\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x05\xdf\x05\xdf\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf')
pgb.add_sprite(pbl,24,24)
del pbl
pbr=bytearray(b'\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x05\xdf\x05\xdf\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\x00\x00\x05\xdf\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x006%6%6%\x00\x00\x00\x00\xd9$\xd9$\xd9$\x00\x00\x00\x00\xd9$\xd9$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%\x00\x00\x00\x00\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x18\x00\x18\x00\x006%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\x00\x00\x00\x00\x00\x00\xd9$\xd9$\x00\x006%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\xd9$\xd9$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x006%6%6%6%6%6%6%6%6%6%\x00\x00\xd9$\xd9$\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x006%6%6%\x00\x00\x00\x00\xd9$\xd9$\xd9$\x00\x00\x05\xdf\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\x00\x00\x05\xdf\x05\xdf\x00\x00\x00\x00\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\xd9$\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xdf\x05\xdf\x05\xdf')
pgb.add_sprite(pbr,24,24)
del pbr
groundspr=bytearray(b'6%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%\x03\xc06%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%\x00\x006%6%6%\x00\x006%6%6%\x00\x006%6%6%\x00\x006%6%6%\x00\x006%6%6%\x00\x006%6%\x00\x00a\xa5\x00\x006%\x00\x00a\xa5\x00\x006%\x00\x00a\xa5\x00\x006%\x00\x00a\xa5\x00\x006%\x00\x00a\xa5\x00\x006%\x00\x00a\xa5\x00\x00\x00\x00a\xa5a\xa5a\xa5\x00\x00a\xa5a\xa5a\xa5\x00\x00a\xa5a\xa5a\xa5\x00\x00a\xa5a\xa5a\xa5\x00\x00a\xa5a\xa5a\xa5\x00\x00a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa50\x81a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa50\x81a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa50\x81a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5a\xa5')
pgb.add_sprite(groundspr,24,24)
del groundspr
bricks=bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4Q\xe4\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00YEYEYEYEYEYEYEYEYE\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00Q\xe4Q\xe4Q\xe4\x00\x00\x00\x00YEYEYEYEYEYEYEYEYE\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00Q\xe4Q\xe4Q\xe4\x00\x00\x00\x00YEYEYEYEYEYEYEYEYE\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00Q\xe4Q\xe4Q\xe4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x009\x019\x019\x019\x019\x01\x00\x009\x019\x019\x019\x019\x019\x019\x019\x019\x019\x01\x00\x00\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x00\x00\x00\x009\x019\x019\x019\x019\x01\x00\x009\x019\x019\x019\x019\x019\x019\x019\x019\x019\x01\x00\x00\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x00\x00\x00\x009\x019\x019\x019\x019\x01\x00\x009\x019\x019\x019\x019\x019\x019\x019\x019\x019\x01\x00\x00\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x81\xa6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x00\x009\x019\x019\x019\x019\x019\x01\x00\x00YEYEYEYEYEYE\x00\x00\x00\x00\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x83\x07\x00\x009\x019\x019\x019\x019\x019\x01\x00\x00YEYEYEYEYEYE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
pgb.add_sprite(bricks, 24, 24)
del bricks
itembox=bytearray(b'\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\xff\xe0\x08>\x08>\x08>\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x08>\x08>\x08>\xff\xe0\x08>\x08>\xff\xe0\xff\xe0\x08>\xff\xe0\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf8\x00\xf9@\xf9@\xf9@\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\xff\xe0\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\xf9@\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\xf9@\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\xf9@\xf9@\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\xf9@\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\xf8\x00\xf9@\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf9@\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\xf8\x00\xf8\x00\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\xf8\x00\xf8\x00\xf8\x00\xf8\x00\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf8\x00\xf8\x00\xf8\x00\xf8\x00\xf8\x00\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\xf8\x00\xf8\x00\xf8\x00\xf8\x00\xf8\x00\xf8\x00\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\xf8\x00\xf8\x00\xf8\x00\xf8\x00\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\xf8\x00\xf8\x00\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\x08>\xff\xe0\xff\xe0\x08>\x08>\xff\xe0\x08>\x08>\x08>\x08>\x08>\x08>\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x08>\x08>\x08>\x08>\x08>\x08>\xff\xe0\x08>\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0')
pgb.add_sprite(itembox,24,24)
del itembox
lightning=bytearray(b'\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\xff\xe0\xff\xe0\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x08>\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf\x05\xdf')
pgb.add_sprite(lightning,24,24)
del lightning


class lightning():
    def __init__(self,x,y):
        global pups
        pups.append(self)
        self.x=x
        self.y=y
        self.speed=8
        self.grav=0
        self.inc=0
        
    
    def walk(self):
        global lev
        global poffset
        self.y+=self.grav
        self.x+=self.speed
        l=checkcoll(self.x, self.y, self.speed, lev, poffset, ("G", "B"), False, False)
        i=checkitembcoll(self.x, self.y, self.speed, lev, poffset, True)
        if not i[0]==0 or not l[0]==0:
            self.speed=-self.speed
        if not self.inc>0 and (l[1]==0 or i[1]==0):
            self.inc-=1
            if self.grav<=10:
                self.grav+=1
        else:
            grav=0
        if abs(int(l[0])) > abs(int(i[0])):   
            self.x+=int(l[0])
        elif abs(int(l[0])) < abs(int(i[0])):
            self.x+=int(i[0])
        if abs(int(l[1])) > abs(int(i[1])):   
            self.y+=int(l[1])
        elif abs(int(l[1])) < abs(int(i[1])):
            self.y+=int(i[1])
        pgb.sprite(6, self.x-poffset, self.y)

def drawscene(frame, scene):
    for scanline in range(10):
        for i in range(11+int(scene/24)):
            try:
                if frame[scanline][i]=="G" and i*24-scene > -24 and i*24-scene < 264:
                    pgb.sprite(3, i*24-scene, scanline*24)
                if frame[scanline][i]=="B" and i*24-scene > -24 and i*24-scene < 264:
                    pgb.sprite(4, i*24-scene, scanline*24)
                if frame[scanline][i]=="S" and i*24-scene > -24 and i*24-scene < 264:
                    pgb.sprite(5, i*24-scene, scanline*24)
                if frame[scanline][i]=="M" and i*24-scene > -24 and i*24-scene < 264:
                    pgb.sprite(5, i*24-scene, scanline*24)
            except:
                "this is if the file ends"
    
def loadlevel(filename):
    with open(filename, "r") as r:
        todraw=r.read().split("\n")
        for i in range(10):
            todraw[i]=list(todraw[i])
    return todraw
        
def detect_collision(speed, detectionradius, posx, posy, width, height, posx2, posy2, width2, height2):
    if posx-posx2<50 and posy-posy2<50:
        left1, top1, right1, bottom1 = posx - width/2, posy - height/2, posx + width/2, posy + height/2
        left2, top2, right2, bottom2 = posx2 - width2/2, posy2 - height2/2, posx2 + width2/2, posy2 + height2/2
        if right1 >= left2 and left1 <= right2 and bottom1 >= top2 and top1 <= bottom2:
            overlap_x = min(right1, right2) - max(left1, left2)
            overlap_y = min(bottom1, bottom2) - max(top1, top2)
            if overlap_x > overlap_y:
                if posy < posy2:
                    move_y = -overlap_y
                else:
                    move_y = overlap_y
                move_x = 0
            else:
                if posx < posx2:
                    move_x = -overlap_x
                else:
                    move_x = overlap_x
                move_y = 0
            
            return int(move_x), int(move_y)
        return 0, 0
    else:
        return 0,0


def checkcoll(playerx, playery,playerspeed, lv, offset, letter, alrbroken, jump):
    gpos=[]
    broken=False
    for i in range(10):
        for f in range(10+int(offset/24)):
            for l in letter:
                try:
                    if lv[i][f]==l and f*24-offset >= -100 and f*24-offset <= 300:
                        gpos.append((f,i))
                except:
                    "this is if the file ends"
    backpos=[]
    for i in range(len(gpos)):
        n=detect_collision(playerspeed, 30, playerx, playery, 24, 24, gpos[i][0]*24-offset, gpos[i][1]*24, 24, 24)
        if n[1]>0 and not alrbroken and not broken and jump:
            lv[gpos[i][1]][gpos[i][0]]=" "
            broken=True
        backpos.append(n)
    newx=[]
    newy=[]
    for i in backpos:
        newx.append(i[0])
        newy.append(i[1])
    cx=0
    cy=0
    try:
        if abs(min(newx))>max(newx):
            cx=min(newx)
        else:
            cx=max(newx)
        if abs(min(newy))>max(newy):
            cy=min(newy)
        else:
            cy=max(newy)
    except:
        "when the collider doesnt exist"
    return int(cx), int(cy), lv, broken

def checkitembcoll(playerx, playery,playerspeed, lv, offset, donttrigger=False):
    gpos=[]
    lpos=[]
    broken=False
    for i in range(10):
        for f in range(10+int(offset/24)):
            try:
                if (lv[i][f]=="M" or lv[i][f]=="S") and f*24-offset >= -24 and f*24-offset <= 264:
                    gpos.append((f,i))
                    lpos.append(lv[i][f])
            except:
                "this is if the file ends"
    backpos=[]
    for i in range(len(gpos)):
        n=detect_collision(playerspeed, 30, playerx, playery, 24, 24, gpos[i][0]*24-offset, gpos[i][1]*24, 24, 24)
        if n[1]>0 and lpos[i]=="M" and not donttrigger:
            lightning(gpos[i][0]*24-offset, gpos[i][1]*24-24)
            print(lv[gpos[i][1]][gpos[i][0]])
            lv[gpos[i][1]][gpos[i][0]]="B"
            broken=True
        backpos.append(n)
    newx=[]
    newy=[]
    for i in backpos:
        newx.append(i[0])
        newy.append(i[1])
    cx=0
    cy=0
    try:
        if abs(min(newx))>max(newx):
            cx=min(newx)
        else:
            cx=max(newx)
        if abs(min(newy))>max(newy):
            cy=min(newy)
        else:
            cy=max(newy)
    except:
        "when the collider doesnt exist"
    return int(cx), int(cy), lv, broken

pups=[]
playerspeed=8
cspeed=8
cspeed1=8
maxspeed=12
grav=0
level=1
poffset=0
playerx=50
playery=100
inc=0
jump=False
jumpamt=0
grounded=False
direction=0
lev=loadlevel("demolevel.lv")
while True:
    if pgb.button_Home():
        homebootstop=open("/noboot", "w")
        homebootstop.close()
        pgb.fill(PicoGameBoy.color(0,0,0))
        pgb.show()
        machine.reset()
        break
    pgb.fill(PicoGameBoy.color(0,187,255))
    drawscene(lev, poffset)
    
    if pgb.button_right() and pgb.button_B():
        if cspeed1>8:
            cspeed1-=.2
        else:
            if int(cspeed)<maxspeed:
                cspeed+=.2
            playerspeed=int(cspeed)
            playerx+=playerspeed
            direction=2
    elif pgb.button_right():
        if cspeed1>8:
            cspeed1-=.2
        else:
            playerx+=playerspeed
            direction=2
            if int(cspeed)>8:
                cspeed-=.2
            playerspeed=int(cspeed)
    else:
        if int(cspeed)>8:
            cspeed=8
        playerspeed=int(cspeed)
    if pgb.button_left() and not (poffset==0 and playerx<0) and pgb.button_B():
        if cspeed>8:
            cspeed-=.2
        else:
            if int(cspeed1)<maxspeed:
                cspeed1+=.2
            playerspeed=int(cspeed1)
            playerx-=playerspeed
            direction=1
    elif pgb.button_left() and not (poffset==0 and playerx<0):
        if cspeed>8:
            cspeed-=.2
        else:
            playerx-=playerspeed
            direction=1
            if int(cspeed1)>8:
                cspeed1-=.2
            playerspeed=int(cspeed1)
    else:
        if int(cspeed1)>8:
            cspeed1=8
        playerspeed=int(cspeed1)
    if pgb.button_left() and not poffset==0 and playerx<20 and pgb.button_B():
        if cspeed>8:
            cspeed-=.2
        else:
            if int(cspeed1)<maxspeed:
                cspeed1+=.2
            playerspeed=int(cspeed1)
            playerx=0
            direction=1
            poffset-=abs(playerspeed)
    elif pgb.button_left() and not poffset==0 and playerx<20:
        if cspeed>8:
            cspeed-=.2
        else:
            if int(cspeed1)>8:
                cspeed1-=.2
            playerspeed=int(cspeed1)
            playerx=0
            direction=1
            poffset-=abs(playerspeed)
    else:
        if int(cspeed1)>8:
            cspeed1=8
        playerspeed=int(cspeed1)
    if cspeed>8:
        playerspeed=int(cspeed)
    elif cspeed1>8:
        playerspeed=int(cspeed1)
    if playerx<0:
        playerx=0
    if not pgb.any_button():
        direction=0
    if playerx>96:
        poffset+=playerspeed
        playerx-=playerspeed
    if poffset<=0:
        poffset=0
    if jump and (jumpamt<3 or (jumpamt<9 and pgb.button_A())):
        playery-=14
        jumpamt+=.5
    else:
        jumpamt=0
        jump=False
    playery+=grav
    i=checkitembcoll(playerx, playery, playerspeed, lev, poffset)
    if i[3]:
        jump=False
        broken=True
        playery+=1
    else:
        broken=False
    l=checkcoll(playerx, playery, playerspeed, lev, poffset, ("G", "B"), broken, jump)
    if l[3]:
        jump=False
    lev=i[2]
    if pgb.button_A() and (l[1]<0 or i[1]<0):
        jump=True
    if not inc>0 and l[1]==0 and i[1]==0:
        inc-=1
        if grav<=10:
            grav+=2
    else:
        grav=0
    if abs(int(l[0])) > abs(int(i[0])):   
        playerx+=int(l[0])
    elif abs(int(l[0])) < abs(int(i[0])):
        playerx+=int(i[0])

    if abs(int(l[1])) > abs(int(i[1])):   
        playery+=int(l[1])
    elif abs(int(l[1])) < abs(int(i[1])):
        playery+=int(i[1])
    for item in pups:
        item.walk()
    pgb.sprite(direction, playerx, playery)
    pgb.show()